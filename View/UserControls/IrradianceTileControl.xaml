<UserControl x:Class="HouseholdMS.View.UserControls.IrradianceTileControl"  
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:res="clr-namespace:HouseholdMS.Resources"
             MinHeight="130" MinWidth="240"
             Background="Transparent">
    <UserControl.Resources>
        <!-- Palette -->
        <SolidColorBrush x:Key="Col.Heading"     Color="#0F172A"/>
        <SolidColorBrush x:Key="Col.Muted"       Color="#667085"/>
        <SolidColorBrush x:Key="Col.Primary"     Color="#2563EB"/>

        <!-- Text styles -->
        <Style x:Key="MutedText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource Col.Muted}"/>
        </Style>

        <!-- Chip -->
        <Style x:Key="Chip" TargetType="Border">
            <Setter Property="CornerRadius" Value="999"/>
            <Setter Property="Padding" Value="8,2"/>
            <Setter Property="Background" Value="#F1F5F9"/>
            <Setter Property="BorderBrush" Value="#E5E7EB"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- Status chip: hide when empty text, tint when error -->
        <Style x:Key="StatusChipFromStatusText" TargetType="Border" BasedOn="{StaticResource Chip}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding StatusText, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsError, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True">
                    <Setter Property="Background" Value="#FEE2E2"/>
                    <Setter Property="BorderBrush" Value="#FCA5A5"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Hide if empty -->
        <Style x:Key="HideIfEmpty" TargetType="TextBlock" BasedOn="{StaticResource MutedText}">
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Icon-only button -->
        <Style x:Key="IconButton" TargetType="Button">
            <Setter Property="Width" Value="28"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="#00000000"/>
            <Setter Property="BorderBrush" Value="#D1D6E5"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="bd" CornerRadius="999"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="#0F2563EB"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="#1A2563EB"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="bd" Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Disable refresh while loading -->
        <Style x:Key="RefreshIconButtonStyle" TargetType="Button" BasedOn="{StaticResource IconButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsLoading, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Refresh glyph style (NO SPIN) -->
        <Style x:Key="RefreshGlyphSpinStyle" TargetType="TextBlock">
            <Setter Property="Opacity" Value="1"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsLoading, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True">
                    <Setter Property="Opacity" Value="0.85"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <!-- CONTENT -->
    <Grid Margin="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <TextBlock Text="☀" FontSize="18" Foreground="{StaticResource Col.Primary}" VerticalAlignment="Center"/>
                <TextBlock Text="{x:Static res:Strings.IRR_Header_Title}"
                           FontWeight="Bold" FontSize="16" Foreground="{StaticResource Col.Heading}" Margin="8,0,0,0"/>
                <Border Style="{StaticResource StatusChipFromStatusText}" Margin="10,0,0,0">
                    <TextBlock Text="{Binding StatusText, RelativeSource={RelativeSource AncestorType=UserControl}}"
                               FontSize="12"/>
                </Border>
            </StackPanel>

            <Button Grid.Column="1"
                    Style="{StaticResource RefreshIconButtonStyle}"
                    ToolTip="{x:Static res:Strings.IRR_Tooltip_Refresh}"
                    Click="Refresh_Click">
                <TextBlock Style="{StaticResource RefreshGlyphSpinStyle}"
                           Text="↻" FontSize="14"
                           Foreground="{StaticResource Col.Primary}"/>
            </Button>
        </Grid>

        <!-- Main metrics -->
        <StackPanel Grid.Row="1" Margin="0,10,0,0">
            <TextBlock Text="{Binding TodayGhiText, RelativeSource={RelativeSource AncestorType=UserControl}}"
                       FontSize="28" FontWeight="SemiBold" Foreground="{StaticResource Col.Heading}"/>
            <TextBlock Text="{Binding TomorrowPeakText, RelativeSource={RelativeSource AncestorType=UserControl}}"
                       Margin="0,6,0,0" Style="{StaticResource MutedText}" />
        </StackPanel>

        <!-- Footer -->
        <TextBlock Grid.Row="2"
                   Text="{Binding LastUpdatedText, RelativeSource={RelativeSource AncestorType=UserControl}}"
                   FontSize="11" Margin="0,10,0,0" Style="{StaticResource HideIfEmpty}"/>
    </Grid>
</UserControl>
