<UserControl x:Class="HouseholdMS.View.Dashboard.ServiceCallDetailControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             d:DesignHeight="760"
             d:DesignWidth="980"
             MinHeight="720"
             MinWidth="960"
             Background="#F6F7FB"
             FontFamily="Segoe UI"
             FontSize="15"
             TextOptions.TextFormattingMode="Ideal"
             TextOptions.TextRenderingMode="ClearType"
             SnapsToDevicePixels="True"
             UseLayoutRounding="True">

    <UserControl.Resources>
        <!-- Palette -->
        <SolidColorBrush x:Key="Col.Accent" Color="#2563EB"/>
        <SolidColorBrush x:Key="Col.Success" Color="#16A34A"/>
        <SolidColorBrush x:Key="Col.Danger"  Color="#DC2626"/>
        <SolidColorBrush x:Key="Col.Muted"   Color="#6B7280"/>
        <SolidColorBrush x:Key="Col.Border"  Color="#E5E7EB"/>
        <SolidColorBrush x:Key="Col.Card"    Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="Col.CardAlt" Color="#F9FAFB"/>
        <SolidColorBrush x:Key="Col.CardSoft" Color="#FAFBFF"/>
        <SolidColorBrush x:Key="Col.Label"   Color="#334155"/>
        <SolidColorBrush x:Key="Col.Value"   Color="#0F172A"/>

        <!-- Header styles -->
        <Style x:Key="HeaderTitle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#0F172A"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="HeaderInfo" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{StaticResource Col.Muted}"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Margin" Value="0,6,0,0"/>
        </Style>

        <!-- Labels -->
        <Style x:Key="FormLabel" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="0,12,0,6"/>
            <Setter Property="Foreground" Value="#111827"/>
        </Style>

        <!-- Base input -->
        <Style x:Key="InputTextBox" TargetType="TextBox">
            <Setter Property="Height" Value="32"/>
            <Setter Property="Padding" Value="10,6"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource Col.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.Triggers>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource Col.Accent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Watermark TextBox using Tag as placeholder -->
        <Style x:Key="WatermarkTextBox" TargetType="TextBox" BasedOn="{StaticResource InputTextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost"/>
                                <TextBlock x:Name="Watermark"
                                           Text="{TemplateBinding Tag}"
                                           Foreground="#9CA3AF"
                                           Margin="10,0,0,0"
                                           VerticalAlignment="Center"
                                           IsHitTestVisible="False"
                                           Visibility="Collapsed"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Watermark" Property="Visibility" Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="Watermark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Buttons -->
        <Style x:Key="PillButton" TargetType="Button">
            <Setter Property="Height" Value="42"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="Margin" Value="0,0,10,0"/>
            <Setter Property="Padding" Value="14,8"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{StaticResource Col.Accent}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.92"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.75"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.55"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PrimaryButton" TargetType="Button" BasedOn="{StaticResource PillButton}">
            <Setter Property="Background" Value="{StaticResource Col.Success}"/>
        </Style>
        <Style x:Key="DangerButton" TargetType="Button" BasedOn="{StaticResource PillButton}">
            <Setter Property="Background" Value="{StaticResource Col.Danger}"/>
        </Style>
        <Style x:Key="GhostButton" TargetType="Button" BasedOn="{StaticResource PillButton}">
            <Setter Property="Foreground" Value="#111827"/>
            <Setter Property="Background" Value="#EEF2FF"/>
        </Style>

        <!-- Chip -->
        <Style x:Key="Chip" TargetType="Border">
            <Setter Property="CornerRadius" Value="999"/>
            <Setter Property="Background" Value="#F3F4F6"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="Padding" Value="10,4"/>
        </Style>

        <!-- Summary “table” text styles -->
        <Style x:Key="SummaryLabelStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Foreground" Value="{StaticResource Col.Label}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,8,12,8"/>
            <Setter Property="TextWrapping" Value="NoWrap"/>
        </Style>
        <Style x:Key="SummaryValueStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Foreground" Value="{StaticResource Col.Value}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,8,0,8"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        </Style>

        <!-- Selected inventory card -->
        <DataTemplate x:Key="InvCardTemplate">
            <Border Background="{StaticResource Col.Card}"
                    BorderBrush="{StaticResource Col.Border}"
                    BorderThickness="1"
                    CornerRadius="10"
                    Padding="10"
                    Margin="0,6,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Vertical" Grid.Column="0">
                        <TextBlock Text="{Binding ItemType}" FontWeight="SemiBold"/>
                        <Border CornerRadius="6"
                                Padding="6,2"
                                HorizontalAlignment="Left"
                                Margin="0,4,0,0"
                                Background="{Binding StockBadgeBrush}">
                            <TextBlock Text="{Binding StockBadgeText}" FontSize="12" Foreground="#111827"/>
                        </Border>
                    </StackPanel>

                    <!-- Quantity stepper -->
                    <StackPanel Orientation="Horizontal" Grid.Column="1" VerticalAlignment="Center" Margin="10,0">
                        <Button Width="28" Height="28" Content="−" Click="QtyMinus_Click" Tag="{Binding}"/>
                        <TextBox Width="44" Height="28" Margin="6,0"
                                 HorizontalContentAlignment="Center"
                                 Text="{Binding QuantityUsed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Button Width="28" Height="28" Content="+" Click="QtyPlus_Click" Tag="{Binding}"/>
                    </StackPanel>

                    <!-- Remove -->
                    <Button Grid.Column="2" Content="✕" Width="28" Height="28"
                            Background="#F3F4F6" Foreground="#374151"
                            BorderThickness="0" Margin="8,0,0,0"
                            Click="RemoveInv_Click" Tag="{Binding}"/>
                </Grid>
            </Border>
        </DataTemplate>

        <!-- Selectable list item -->
        <Style x:Key="SelectableListItem" TargetType="ListBoxItem">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <EventSetter Event="PreviewMouseLeftButtonUp" Handler="ListItem_Toggle_OnClick"/>
            <EventSetter Event="KeyDown" Handler="ListItem_KeyDown_Toggle"/>
        </Style>

        <!-- Technician row -->
        <DataTemplate x:Key="TechRowTemplate">
            <Border x:Name="Card"
                    Background="{StaticResource Col.Card}"
                    BorderBrush="{StaticResource Col.Border}"
                    BorderThickness="1"
                    CornerRadius="10"
                    Padding="10"
                    Margin="0,6,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="{Binding Name}" FontWeight="SemiBold"/>
                        <TextBlock Text="{Binding TechnicianID, StringFormat=ID #{0}}"
                                   FontSize="12" Foreground="{StaticResource Col.Muted}" Margin="0,2,0,0"/>
                    </StackPanel>

                    <Border x:Name="TechCheckGlyph" Grid.Column="1" Background="#E0E7FF"
                            CornerRadius="999" Padding="6,2" VerticalAlignment="Center" Visibility="Collapsed">
                        <TextBlock Text="✔" FontWeight="Bold" Foreground="#3730A3"/>
                    </Border>
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <Trigger SourceName="Card" Property="IsMouseOver" Value="True">
                    <Setter TargetName="Card" Property="Background" Value="#F8FAFF"/>
                    <Setter TargetName="Card" Property="BorderBrush" Value="{StaticResource Col.Accent}"/>
                    <Setter TargetName="Card" Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="#000000" BlurRadius="8" ShadowDepth="0" Opacity="0.08"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter TargetName="Card" Property="BorderBrush" Value="{StaticResource Col.Accent}"/>
                    <Setter TargetName="Card" Property="Background" Value="#EFF6FF"/>
                    <Setter TargetName="TechCheckGlyph" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="Card" Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="#000000" BlurRadius="8" ShadowDepth="0" Opacity="0.08"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <!-- Inventory row -->
        <DataTemplate x:Key="InvRowTemplate">
            <Border x:Name="Card"
                    Background="{StaticResource Col.Card}"
                    BorderBrush="{StaticResource Col.Border}"
                    BorderThickness="1"
                    CornerRadius="10"
                    Padding="10"
                    Margin="0,6,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBlock Text="{Binding ItemType}" FontWeight="SemiBold"/>
                        <Border CornerRadius="6" Padding="6,2" Margin="8,0,0,0"
                                Background="{Binding StockBadgeBrush}">
                            <TextBlock Text="{Binding StockBadgeText}" FontSize="12" Foreground="#111827"/>
                        </Border>
                        <TextBlock Text="{Binding Available, StringFormat= (Avail: {0})}"
                                   Margin="8,0,0,0"
                                   Foreground="{StaticResource Col.Muted}" FontSize="12"/>
                    </StackPanel>

                    <Border x:Name="InvCheckGlyph" Grid.Column="1" Background="#E0E7FF"
                            CornerRadius="999" Padding="6,2" VerticalAlignment="Center" Visibility="Collapsed">
                        <TextBlock Text="✔" FontWeight="Bold" Foreground="#3730A3"/>
                    </Border>
                </Grid>
            </Border>

            <DataTemplate.Triggers>
                <Trigger SourceName="Card" Property="IsMouseOver" Value="True">
                    <Setter TargetName="Card" Property="Background" Value="#F8FAFF"/>
                    <Setter TargetName="Card" Property="BorderBrush" Value="{StaticResource Col.Accent}"/>
                    <Setter TargetName="Card" Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="#000000" BlurRadius="8" ShadowDepth="0" Opacity="0.08"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter TargetName="Card" Property="BorderBrush" Value="{StaticResource Col.Accent}"/>
                    <Setter TargetName="Card" Property="Background" Value="#EFF6FF"/>
                    <Setter TargetName="InvCheckGlyph" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="Card" Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="#000000" BlurRadius="8" ShadowDepth="0" Opacity="0.08"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </UserControl.Resources>

    <!-- Outer card -->
    <Border Padding="28"
            CornerRadius="16"
            BorderBrush="{StaticResource Col.Border}"
            BorderThickness="1"
            Background="White"
            SnapsToDevicePixels="True">
        <Border.Effect>
            <DropShadowEffect BlurRadius="18" ShadowDepth="2" Opacity="0.16"/>
        </Border.Effect>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <StackPanel Grid.Row="0" Orientation="Vertical" Margin="0,0,0,12">
                <DockPanel LastChildFill="False">
                    <TextBlock Text="🧰" FontSize="26" Margin="0,0,10,0" VerticalAlignment="Center"/>
                    <TextBlock x:Name="HeaderText" Text="Service Call Details" Style="{StaticResource HeaderTitle}"/>
                </DockPanel>
            </StackPanel>

            <!-- Body -->
            <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                <StackPanel>

                    <!-- Summary card with explicit rows + separators (prevents any overlap) -->
                    <Border BorderBrush="{StaticResource Col.Border}" BorderThickness="1" CornerRadius="12" Padding="16" Background="{StaticResource Col.CardSoft}">
                        <StackPanel>
                            <TextBlock Text="Service summary" Style="{StaticResource FormLabel}" Margin="0,0,0,10"/>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <!-- 0 Service ID -->
                                    <RowDefinition Height="1"/>
                                    <!-- 1 line -->
                                    <RowDefinition Height="Auto"/>
                                    <!-- 2 Opened At -->
                                    <RowDefinition Height="1"/>
                                    <!-- 3 line -->
                                    <RowDefinition Height="Auto"/>
                                    <!-- 4 HH ID -->
                                    <RowDefinition Height="1"/>
                                    <!-- 5 line -->
                                    <RowDefinition Height="Auto"/>
                                    <!-- 6 Owner -->
                                    <RowDefinition Height="1"/>
                                    <!-- 7 line -->
                                    <RowDefinition Height="Auto"/>
                                    <!-- 8 User -->
                                    <RowDefinition Height="1"/>
                                    <!-- 9 line -->
                                    <RowDefinition Height="Auto"/>
                                    <!-- 10 Municipality -->
                                    <RowDefinition Height="1"/>
                                    <!-- 11 line -->
                                    <RowDefinition Height="Auto"/>
                                    <!-- 12 District -->
                                    <RowDefinition Height="1"/>
                                    <!-- 13 line -->
                                    <RowDefinition Height="Auto"/>
                                    <!-- 14 Contact -->
                                    <RowDefinition Height="1"/>
                                    <!-- 15 line -->
                                    <RowDefinition Height="Auto"/>
                                    <!-- 16 Current Status -->
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="220"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!-- 0 -->
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Service ID:" Style="{StaticResource SummaryLabelStyle}"/>
                                <TextBlock x:Name="SvcIdText" Grid.Row="0" Grid.Column="1" Style="{StaticResource SummaryValueStyle}"/>

                                <Border Grid.Row="1" Grid.ColumnSpan="2" Background="{StaticResource Col.Border}"/>

                                <!-- 2 -->
                                <TextBlock Grid.Row="2" Grid.Column="0" Text="Opened At:" Style="{StaticResource SummaryLabelStyle}"/>
                                <TextBlock x:Name="OpenedAtText" Grid.Row="2" Grid.Column="1" Style="{StaticResource SummaryValueStyle}"/>

                                <Border Grid.Row="3" Grid.ColumnSpan="2" Background="{StaticResource Col.Border}"/>

                                <!-- 4 -->
                                <TextBlock Grid.Row="4" Grid.Column="0" Text="Household ID:" Style="{StaticResource SummaryLabelStyle}"/>
                                <TextBlock x:Name="HHIdText" Grid.Row="4" Grid.Column="1" Style="{StaticResource SummaryValueStyle}"/>

                                <Border Grid.Row="5" Grid.ColumnSpan="2" Background="{StaticResource Col.Border}"/>

                                <!-- 6 -->
                                <TextBlock Grid.Row="6" Grid.Column="0" Text="Owner:" Style="{StaticResource SummaryLabelStyle}"/>
                                <TextBlock x:Name="OwnerText" Grid.Row="6" Grid.Column="1" Style="{StaticResource SummaryValueStyle}"/>

                                <Border Grid.Row="7" Grid.ColumnSpan="2" Background="{StaticResource Col.Border}"/>

                                <!-- 8 -->
                                <TextBlock Grid.Row="8" Grid.Column="0" Text="User:" Style="{StaticResource SummaryLabelStyle}"/>
                                <TextBlock x:Name="UserText" Grid.Row="8" Grid.Column="1" Style="{StaticResource SummaryValueStyle}"/>

                                <Border Grid.Row="9" Grid.ColumnSpan="2" Background="{StaticResource Col.Border}"/>

                                <!-- 10 -->
                                <TextBlock Grid.Row="10" Grid.Column="0" Text="Municipality:" Style="{StaticResource SummaryLabelStyle}"/>
                                <TextBlock x:Name="MunicipalityText" Grid.Row="10" Grid.Column="1" Style="{StaticResource SummaryValueStyle}"/>

                                <Border Grid.Row="11" Grid.ColumnSpan="2" Background="{StaticResource Col.Border}"/>

                                <!-- 12 -->
                                <TextBlock Grid.Row="12" Grid.Column="0" Text="District:" Style="{StaticResource SummaryLabelStyle}"/>
                                <TextBlock x:Name="DistrictText" Grid.Row="12" Grid.Column="1" Style="{StaticResource SummaryValueStyle}"/>

                                <Border Grid.Row="13" Grid.ColumnSpan="2" Background="{StaticResource Col.Border}"/>

                                <!-- 14 -->
                                <TextBlock Grid.Row="14" Grid.Column="0" Text="Contact:" Style="{StaticResource SummaryLabelStyle}"/>
                                <TextBlock x:Name="ContactText" Grid.Row="14" Grid.Column="1" Style="{StaticResource SummaryValueStyle}"/>

                                <Border Grid.Row="15" Grid.ColumnSpan="2" Background="{StaticResource Col.Border}"/>

                                <!-- 16 -->
                                <TextBlock Grid.Row="16" Grid.Column="0" Text="Current Status:" Style="{StaticResource SummaryLabelStyle}"/>
                                <TextBlock x:Name="StatusText" Grid.Row="16" Grid.Column="1" Style="{StaticResource SummaryValueStyle}"/>
                            </Grid>
                        </StackPanel>
                    </Border>

                    <!-- Problem -->
                    <TextBlock Text="Problem description" Style="{StaticResource FormLabel}"/>
                    <TextBlock x:Name="ProblemPrevLabel" Text="Previous" Foreground="{StaticResource Col.Muted}" FontStyle="Italic" Margin="0,0,0,4"/>
                    <TextBox x:Name="ProblemPrevBox" Height="80" AcceptsReturn="True" TextWrapping="Wrap"
                             VerticalScrollBarVisibility="Auto" Style="{StaticResource InputTextBox}"
                             IsReadOnly="True" Background="{StaticResource Col.CardAlt}" FontStyle="Italic"/>
                    <TextBlock Text="New update" Style="{StaticResource FormLabel}" Margin="0,8,0,6"/>
                    <TextBox x:Name="ProblemNewBox" Height="90" AcceptsReturn="True" TextWrapping="Wrap"
                             VerticalScrollBarVisibility="Auto" Style="{StaticResource WatermarkTextBox}" Tag="What did you find now?"/>

                    <!-- Action -->
                    <TextBlock Text="Action taken" Style="{StaticResource FormLabel}"/>
                    <TextBlock x:Name="ActionPrevLabel" Text="Previous" Foreground="{StaticResource Col.Muted}" FontStyle="Italic" Margin="0,0,0,4"/>
                    <TextBox x:Name="ActionPrevBox" Height="80" AcceptsReturn="True" TextWrapping="Wrap"
                             VerticalScrollBarVisibility="Auto" Style="{StaticResource InputTextBox}"
                             IsReadOnly="True" Background="{StaticResource Col.CardAlt}" FontStyle="Italic"/>
                    <TextBlock Text="New update" Style="{StaticResource FormLabel}" Margin="0,8,0,6"/>
                    <TextBox x:Name="ActionNewBox" Height="90" AcceptsReturn="True" TextWrapping="Wrap"
                             VerticalScrollBarVisibility="Auto" Style="{StaticResource WatermarkTextBox}" Tag="What did you do this visit?"/>

                    <!-- Technicians -->
                    <TextBlock Text="Technicians involved" Style="{StaticResource FormLabel}"/>
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal">
                            <Button x:Name="OpenTechPickerBtn"
                                    Content="Select Technicians (0)"
                                    Style="{StaticResource PillButton}"
                                    Click="OpenTechPickerBtn_Click"/>
                            <Button Content="Clear" Style="{StaticResource GhostButton}" Click="ClearTechSelection_Click"/>
                        </StackPanel>
                        <ItemsControl x:Name="TechChipList" Margin="0,8,0,0">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border Style="{StaticResource Chip}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Name}" Margin="0,0,6,0"/>
                                            <Button Content="✕" Width="20" Height="20"
                                                    Background="#E5E7EB" Foreground="#374151"
                                                    BorderThickness="0" Padding="0"
                                                    Tag="{Binding}"
                                                    Click="RemoveTechChip_Click"/>
                                        </StackPanel>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>

                    <!-- Inventory -->
                    <TextBlock Text="Inventory used" Style="{StaticResource FormLabel}"/>
                    <StackPanel Orientation="Horizontal">
                        <Button x:Name="OpenInvPickerBtn"
                                Content="Add Inventory Items"
                                Style="{StaticResource PillButton}"
                                Click="OpenInvPickerBtn_Click"/>
                        <Button Content="Clear" Style="{StaticResource GhostButton}" Click="ClearInvSelection_Click"/>
                    </StackPanel>
                    <ItemsControl x:Name="SelectedInvList" ItemTemplate="{StaticResource InvCardTemplate}" Margin="0,8,0,0"/>

                    <TextBlock x:Name="ValidationText"
                               Foreground="{StaticResource Col.Danger}"
                               Margin="0,8,0,0"
                               Visibility="Collapsed"
                               TextWrapping="Wrap"/>
                </StackPanel>
            </ScrollViewer>

            <!-- Footer (buttons pinned right) -->
            <Grid Grid.Row="2" Margin="0,18,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <Button x:Name="SaveOpenBtn" Content="💾 Save and keep the service call" Style="{StaticResource GhostButton}" Click="SaveOpenBtn_Click"/>
                    <Button x:Name="CancelBtn" Content="✖ Cancel service call" Style="{StaticResource DangerButton}" Margin="8,0,0,0" Click="CancelBtn_Click"/>
                    <Button x:Name="FinishBtn" Content="✔ Finish service call" Style="{StaticResource PrimaryButton}" Margin="8,0,0,0" Click="FinishBtn_Click"/>
                </StackPanel>
            </Grid>

            <!-- Technicians Picker Overlay (modal full cover) -->
            <Grid x:Name="TechOverlay" Grid.RowSpan="3" Background="#66000000" Visibility="Collapsed" Panel.ZIndex="100">
                <Border Background="White" CornerRadius="12" Padding="16" MaxWidth="560" HorizontalAlignment="Center" VerticalAlignment="Center" BorderBrush="{StaticResource Col.Border}" BorderThickness="1">
                    <Grid x:Name="TechOverlayRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <DockPanel>
                            <TextBlock Text="Select Technicians" FontSize="16" FontWeight="Bold" DockPanel.Dock="Left"/>
                            <TextBlock x:Name="TechHeaderCountText" Text="(0 selected)" Margin="8,0,0,0" VerticalAlignment="Center" Foreground="{StaticResource Col.Muted}"/>
                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Right">
                                <Button Content="Select all" Style="{StaticResource GhostButton}" Click="TechSelectAll_Click"/>
                                <Button Content="Clear" Style="{StaticResource GhostButton}" Click="TechClear_Click"/>
                            </StackPanel>
                        </DockPanel>

                        <TextBox x:Name="TechSearchBox" Grid.Row="1" Margin="0,10,0,8"
                                 Style="{StaticResource WatermarkTextBox}"
                                 Tag="Search..."
                                 TextChanged="TechSearchBox_TextChanged"/>

                        <ListBox x:Name="TechList" Grid.Row="2" BorderBrush="{StaticResource Col.Border}" BorderThickness="1" Height="340"
                                 ItemTemplate="{StaticResource TechRowTemplate}"
                                 ItemContainerStyle="{StaticResource SelectableListItem}"/>

                        <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,0,0">
                            <Button Content="Done" Style="{StaticResource PrimaryButton}" Click="TechPickerSave_Click"/>
                            <Button Content="Close" Style="{StaticResource DangerButton}" Click="TechPickerClose_Click"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>

            <!-- Inventory Picker Overlay (modal full cover) -->
            <Grid x:Name="InvOverlay" Grid.RowSpan="3" Background="#66000000" Visibility="Collapsed" Panel.ZIndex="100">
                <Border Background="White" CornerRadius="12" Padding="16" MaxWidth="720" HorizontalAlignment="Center" VerticalAlignment="Center" BorderBrush="{StaticResource Col.Border}" BorderThickness="1">
                    <Grid x:Name="InvOverlayRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <DockPanel>
                            <TextBlock Text="Add Inventory Items" FontSize="16" FontWeight="Bold" DockPanel.Dock="Left"/>
                            <TextBlock x:Name="InvHeaderCountText" Text="(0 selected)" Margin="8,0,0,0" VerticalAlignment="Center" Foreground="{StaticResource Col.Muted}"/>
                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Right">
                                <Button Content="Select in-stock" Style="{StaticResource GhostButton}" Click="InvSelectAllInStock_Click"/>
                                <Button Content="Clear" Style="{StaticResource GhostButton}" Click="InvClear_Click"/>
                            </StackPanel>
                        </DockPanel>

                        <DockPanel Grid.Row="1" LastChildFill="True" Margin="0,10,0,8">
                            <TextBox x:Name="InvSearchBox"
                                     DockPanel.Dock="Left"
                                     Width="260"
                                     Style="{StaticResource WatermarkTextBox}"
                                     Tag="Search items..."
                                     TextChanged="InvSearchBox_TextChanged"/>
                            <CheckBox x:Name="InStockOnlyCheck"
                                      Content="In-stock only"
                                      Margin="10,0,0,0"
                                      VerticalAlignment="Center"
                                      Checked="InStockOnlyCheck_Changed"
                                      Unchecked="InStockOnlyCheck_Changed"/>
                        </DockPanel>

                        <ListBox x:Name="InvList" Grid.Row="2"
                                 BorderBrush="{StaticResource Col.Border}" BorderThickness="1"
                                 Height="380"
                                 ItemTemplate="{StaticResource InvRowTemplate}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem" BasedOn="{StaticResource SelectableListItem}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CanSelect}" Value="False">
                                            <Setter Property="Opacity" Value="0.6"/>
                                            <Setter Property="IsEnabled" Value="True"/>
                                            <Setter Property="ToolTip" Value="Out of stock"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>

                        <!-- Quantity Popup (strict modal inside overlay) -->
                        <Popup x:Name="QtyPopup"
                               Placement="Right"
                               StaysOpen="True"
                               AllowsTransparency="True"
                               PopupAnimation="Fade"
                               Opened="QtyPopup_Opened"
                               Closed="QtyPopup_Closed">
                            <Border Background="White"
                                    CornerRadius="12"
                                    Padding="12"
                                    BorderBrush="{StaticResource Col.Border}"
                                    BorderThickness="1">
                                <StackPanel MinWidth="220" PreviewKeyDown="QtyPopup_PreviewKeyDown">
                                    <TextBlock Text="{Binding ItemType}" FontWeight="Bold" Margin="0,0,0,8"/>
                                    <WrapPanel Margin="0,0,0,6">
                                        <Button Content="1"  Style="{StaticResource GhostButton}" Margin="0,0,6,6" Tag="1"  Click="QtyPreset_Click"/>
                                        <Button Content="2"  Style="{StaticResource GhostButton}" Margin="0,0,6,6" Tag="2"  Click="QtyPreset_Click"/>
                                        <Button Content="3"  Style="{StaticResource GhostButton}" Margin="0,0,6,6" Tag="3"  Click="QtyPreset_Click"/>
                                        <Button Content="5"  Style="{StaticResource GhostButton}" Margin="0,0,6,6" Tag="5"  Click="QtyPreset_Click"/>
                                        <Button Content="10" Style="{StaticResource GhostButton}" Margin="0,0,6,6" Tag="10" Click="QtyPreset_Click"/>
                                    </WrapPanel>

                                    <StackPanel Orientation="Horizontal" Margin="0,2,0,10" HorizontalAlignment="Left">
                                        <Button Width="28" Height="28" Content="−" Click="QtyPopupMinus_Click"/>
                                        <TextBox x:Name="QtyPopupTextBox" Width="56" Height="28" Margin="6,0"
                                                 HorizontalContentAlignment="Center"
                                                 Text="{Binding QuantityUsed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <Button Width="28" Height="28" Content="+" Click="QtyPopupPlus_Click"/>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                        <Button Content="OK" Style="{StaticResource PrimaryButton}" Click="QtyPopup_OK_Click"/>
                                        <Button Content="Cancel" Style="{StaticResource DangerButton}" Click="QtyPopup_Cancel_Click"/>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                        </Popup>

                        <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,0,0">
                            <Button Content="Done" Style="{StaticResource PrimaryButton}" Click="InvPickerAdd_Click"/>
                            <Button Content="Close" Style="{StaticResource DangerButton}" Click="InvPickerClose_Click"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </Border>
</UserControl>
