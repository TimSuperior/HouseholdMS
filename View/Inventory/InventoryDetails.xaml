<Window x:Class="HouseholdMS.View.Inventory.InventoryDetails"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Inventory Details"
        Width="760" Height="600"
        WindowStartupLocation="CenterOwner"
        Background="#f7f7fb"
        ResizeMode="NoResize"
        ShowInTaskbar="False">

    <!-- Make brushes/styles visible to FindResource/TryFindResource -->
    <Window.Resources>
        <!-- Palette -->
        <SolidColorBrush x:Key="SuccessBrush"  Color="#4CAF50"/>
        <SolidColorBrush x:Key="WarningBrush"  Color="#FF9800"/>
        <SolidColorBrush x:Key="DangerBrush"   Color="#F44336"/>
        <SolidColorBrush x:Key="MutedBrush"    Color="#9E9E9E"/>

        <!-- Chips -->
        <Style x:Key="ChipBorder" TargetType="Border">
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Padding" Value="8,3"/>
            <Setter Property="Margin" Value="6,0,0,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="ChipText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>

        <!-- Labels -->
        <Style x:Key="FormLabel" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="0,10,0,4"/>
            <Setter Property="Foreground" Value="#2E3B4E"/>
        </Style>

        <!-- Read-only box -->
        <Style x:Key="ReadOnlyBox" TargetType="TextBox">
            <Setter Property="Height" Value="32"/>
            <Setter Property="Padding" Value="8,0"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="Background" Value="#FAFAFA"/>
            <Setter Property="BorderBrush" Value="#E0E0E0"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <!-- DataGrid look -->
        <Style TargetType="DataGrid">
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="Margin" Value="0,8,0,0"/>
        </Style>
    </Window.Resources>

    <Border Padding="25" CornerRadius="12" BorderBrush="#E0E0E0" BorderThickness="1" Background="White" Margin="14">
        <Grid x:Name="Root" Loaded="Window_Loaded" PreviewKeyDown="Root_PreviewKeyDown">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <Grid Grid.Row="0" Margin="0,0,0,8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="📦" FontSize="22" Margin="0,0,8,0"/>
                    <TextBlock x:Name="FormHeader" FontSize="20" FontWeight="Bold" Foreground="#2E3B4E"
                               Text="Inventory Details"/>
                </StackPanel>

                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Border x:Name="IdChip" Background="#ECEFF1" BorderBrush="#CFD8DC" BorderThickness="1" Style="{StaticResource ChipBorder}">
                        <TextBlock x:Name="IdChipText" Foreground="#37474F" FontWeight="SemiBold"/>
                    </Border>
                    <Border x:Name="StatusChip" Style="{StaticResource ChipBorder}" Background="{StaticResource SuccessBrush}">
                        <TextBlock x:Name="StatusChipText" Style="{StaticResource ChipText}" Text="In Stock"/>
                    </Border>
                </StackPanel>
            </Grid>

            <!-- Info bar -->
            <Border x:Name="StatusInfoBar" Grid.Row="1" Background="#FFF3CD" BorderBrush="#FAD38B"
                    BorderThickness="1" CornerRadius="8" Padding="10" Margin="0,0,0,10" Visibility="Collapsed">
                <TextBlock x:Name="StatusInfoText" Foreground="#663C00" Text="This item is low on stock."/>
            </Border>

            <!-- Content: details + usage table (NO TABS) -->
            <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto">
                <StackPanel Margin="0,6,0,0">

                    <TextBlock Text="Item Type" Style="{StaticResource FormLabel}"/>
                    <TextBox x:Name="ItemTypeBox" Style="{StaticResource ReadOnlyBox}" Margin="0,0,0,10"/>

                    <!-- Side by side: Available + Total Used -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="12"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0">
                            <TextBlock Text="Available" Style="{StaticResource FormLabel}"/>
                            <TextBox x:Name="AvailQtyBox" Style="{StaticResource ReadOnlyBox}" Margin="0,0,0,10"/>
                        </StackPanel>

                        <StackPanel Grid.Column="2">
                            <TextBlock Text="Total Used" Style="{StaticResource FormLabel}"/>
                            <TextBox x:Name="UsedQtyBox" Style="{StaticResource ReadOnlyBox}" Margin="0,0,0,10"/>
                        </StackPanel>
                    </Grid>

                    <!-- Side by side: Last Restocked + Last Used -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="12"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0">
                            <TextBlock Text="Last Restocked" Style="{StaticResource FormLabel}"/>
                            <TextBlock x:Name="LastRestockedText" Foreground="{StaticResource MutedBrush}" Text="—"/>
                        </StackPanel>

                        <StackPanel Grid.Column="2">
                            <TextBlock Text="Last Used" Style="{StaticResource FormLabel}"/>
                            <TextBlock x:Name="LastUsedText" Foreground="{StaticResource MutedBrush}" Text="—"/>
                        </StackPanel>
                    </Grid>

                    <TextBlock Text="Note" Style="{StaticResource FormLabel}"/>
                    <TextBox x:Name="NoteBox" Style="{StaticResource ReadOnlyBox}" Height="80"
                             AcceptsReturn="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto"/>

                    <!-- Usage history table -->
                    <TextBlock Text="Usage History" Style="{StaticResource FormLabel}" Margin="0,16,0,4"/>
                    <DataGrid x:Name="UsageGrid" IsReadOnly="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="When"         Binding="{Binding UsedAtLocal}"   Width="160"/>
                            <DataGridTextColumn Header="Qty Used"     Binding="{Binding Quantity}"      Width="80"/>
                            <DataGridTextColumn Header="Service"      Binding="{Binding ServiceCol}"    Width="120"/>
                            <DataGridTextColumn Header="Household"    Binding="{Binding HouseholdID}"   Width="100"/>
                            <DataGridTextColumn Header="Technician(s)" Binding="{Binding TechnicianCol}" Width="180"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
            </ScrollViewer>

            <!-- Footer: Close only -->
            <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,18,0,0">
                <Button Content="Close" Padding="12,6" Click="Cancel_Click"/>
            </StackPanel>
        </Grid>
    </Border>
</Window>
