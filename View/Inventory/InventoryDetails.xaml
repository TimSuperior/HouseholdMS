<Window x:Class="HouseholdMS.View.Inventory.InventoryDetails" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Inventory Details"
        Width="1100" Height="820"
        WindowStartupLocation="CenterOwner"
        Background="#F6F7FB"
        ResizeMode="NoResize"
        ShowInTaskbar="False"
        UseLayoutRounding="True"
        SnapsToDevicePixels="True"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="ClearType">

    <!-- Resources -->
    <Window.Resources>
        <!-- Palette -->
        <SolidColorBrush x:Key="SuccessBrush"  Color="#4CAF50"/>
        <SolidColorBrush x:Key="WarningBrush"  Color="#FF9800"/>
        <SolidColorBrush x:Key="DangerBrush"   Color="#F44336"/>
        <SolidColorBrush x:Key="MutedBrush"    Color="#64748B"/>

        <!-- Extra UI colors for table look -->
        <SolidColorBrush x:Key="HeaderBg"      Color="#F3F4F6"/>
        <SolidColorBrush x:Key="HeaderFg"      Color="#374151"/>
        <SolidColorBrush x:Key="RowAlt"        Color="#FAFAFD"/>
        <SolidColorBrush x:Key="RowHover"      Color="#F0F7FF"/>
        <SolidColorBrush x:Key="RowSel"        Color="#DBEAFE"/>
        <SolidColorBrush x:Key="GridLineBrush" Color="#D9DCE3"/>

        <!-- Chips -->
        <Style x:Key="ChipBorder" TargetType="Border">
            <Setter Property="CornerRadius" Value="12"/>
            <Setter Property="Padding" Value="10,6"/>
            <Setter Property="Margin" Value="8,0,0,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="ChipText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14.5"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>

        <!-- Labels -->
        <Style x:Key="FormLabel" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="0,12,0,6"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Foreground" Value="#2E3B4E"/>
        </Style>

        <!-- Read-only box -->
        <Style x:Key="ReadOnlyBox" TargetType="TextBox">
            <Setter Property="Height" Value="40"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="Background" Value="#FAFAFA"/>
            <Setter Property="BorderBrush" Value="#E0E0E0"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <!-- DataGrid: visible vertical + horizontal lines, centered, modern -->
        <Style TargetType="DataGrid">
            <Setter Property="FontSize" Value="14.5"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="GridLinesVisibility" Value="All"/>
            <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource GridLineBrush}"/>
            <Setter Property="VerticalGridLinesBrush" Value="{StaticResource GridLineBrush}"/>
            <Setter Property="AlternationCount" Value="2"/>
            <Setter Property="AlternatingRowBackground" Value="{StaticResource RowAlt}"/>
            <Setter Property="Margin" Value="0,10,0,0"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{StaticResource HeaderBg}"/>
            <Setter Property="Foreground" Value="{StaticResource HeaderFg}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="BorderBrush" Value="#E5E7EB"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="44"/>
        </Style>

        <Style TargetType="DataGridRow">
            <Setter Property="Height" Value="40"/>
            <Setter Property="BorderBrush" Value="#E5E7EB"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource RowHover}"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource RowSel}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="DataGridCell">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10,2"/>
            <Setter Property="BorderBrush" Value="{StaticResource GridLineBrush}"/>
            <Setter Property="BorderThickness" Value="0,0,1,0"/>
        </Style>

        <!-- Centered text for DataGrid columns -->
        <Style x:Key="CenteredTextBlock" TargetType="TextBlock">
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0"/>
        </Style>

        <!-- ===== Buttons (ported from AddInventoryControl) ===== -->
        <Style x:Key="PrimaryButton" TargetType="Button">
            <Setter Property="Height" Value="44"/>
            <Setter Property="MinWidth" Value="132"/>
            <Setter Property="FontSize" Value="14.5"/>
            <Setter Property="Padding" Value="16,10"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="#4CAF50"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>

        <Style x:Key="DangerButton" TargetType="Button" BasedOn="{StaticResource PrimaryButton}">
            <Setter Property="Background" Value="#D32F2F"/>
        </Style>

        <Style x:Key="CancelButton" TargetType="Button" BasedOn="{StaticResource PrimaryButton}">
            <Setter Property="Background" Value="#F44336"/>
            <Setter Property="MinWidth" Value="112"/>
            <Setter Property="Height" Value="42"/>
        </Style>
        <!-- ===== /Buttons ===== -->
    </Window.Resources>

    <Border Padding="28" CornerRadius="14" BorderBrush="#E0E0E0" BorderThickness="1" Background="White" Margin="18">
        <Border.Effect>
            <DropShadowEffect Color="#33000000" BlurRadius="14" ShadowDepth="1" Opacity="0.35"/>
        </Border.Effect>

        <Grid x:Name="Root" Loaded="Window_Loaded" PreviewKeyDown="Root_PreviewKeyDown">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <Grid Grid.Row="0" Margin="0,0,0,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="📦" FontSize="26" Margin="0,0,10,0"/>
                    <TextBlock x:Name="FormHeader" FontSize="22" FontWeight="Bold" Foreground="#1F2937"
                               Text="Inventory Details"/>
                </StackPanel>

                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Border x:Name="IdChip" Background="#ECEFF1" BorderBrush="#CFD8DC" BorderThickness="1" Style="{StaticResource ChipBorder}">
                        <TextBlock x:Name="IdChipText" Foreground="#37474F" FontWeight="SemiBold"
                                   TextAlignment="Center" VerticalAlignment="Center" FontSize="14.5"/>
                    </Border>
                    <Border x:Name="StatusChip" Style="{StaticResource ChipBorder}" Background="{StaticResource SuccessBrush}">
                        <TextBlock x:Name="StatusChipText" Style="{StaticResource ChipText}" Text="In Stock"/>
                    </Border>
                </StackPanel>
            </Grid>

            <!-- Info bar -->
            <Border x:Name="StatusInfoBar" Grid.Row="1" Background="#FFF3CD" BorderBrush="#FAD38B"
                    BorderThickness="1" CornerRadius="10" Padding="12" Margin="0,0,0,12" Visibility="Collapsed">
                <TextBlock x:Name="StatusInfoText" Foreground="#663C00" FontSize="14.5"
                           Text="This item is low on stock."/>
            </Border>

            <!-- Content: details + histories -->
            <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto">
                <StackPanel Margin="0,6,0,0">

                    <TextBlock Text="Item Type" Style="{StaticResource FormLabel}"/>
                    <TextBox x:Name="ItemTypeBox" Style="{StaticResource ReadOnlyBox}" Margin="0,0,0,12"/>

                    <!-- Side by side: Available + Total Used -->
                    <Grid Margin="0,0,0,4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0">
                            <TextBlock Text="Available" Style="{StaticResource FormLabel}"/>
                            <TextBox x:Name="AvailQtyBox" Style="{StaticResource ReadOnlyBox}" Margin="0,0,0,12"/>
                        </StackPanel>

                        <StackPanel Grid.Column="2">
                            <TextBlock Text="Used" Style="{StaticResource FormLabel}"/>
                            <TextBox x:Name="UsedQtyBox" Style="{StaticResource ReadOnlyBox}" Margin="0,0,0,12"/>
                        </StackPanel>
                    </Grid>

                    <!-- Side by side: Last Restocked + Last Used -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0">
                            <TextBlock Text="Last Restocked" Style="{StaticResource FormLabel}"/>
                            <TextBlock x:Name="LastRestockedText" Foreground="{StaticResource MutedBrush}" FontSize="15" Text="—"/>
                        </StackPanel>

                        <StackPanel Grid.Column="2">
                            <TextBlock Text="Last Used" Style="{StaticResource FormLabel}"/>
                            <TextBlock x:Name="LastUsedText" Foreground="{StaticResource MutedBrush}" FontSize="15" Text="—"/>
                        </StackPanel>
                    </Grid>

                    <TextBlock Text="Note" Style="{StaticResource FormLabel}"/>
                    <TextBox x:Name="NoteBox" Style="{StaticResource ReadOnlyBox}" Height="96"
                             AcceptsReturn="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto"/>

                    <!-- Usage history table -->
                    <TextBlock Text="Usage History" Style="{StaticResource FormLabel}" Margin="0,18,0,6"/>
                    <DataGrid x:Name="UsageGrid" IsReadOnly="True"
                              MouseDoubleClick="UsageGrid_MouseDoubleClick"
                              MaxHeight="360">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="When"          Binding="{Binding UsedAtLocal}"    Width="180"
                                                ElementStyle="{StaticResource CenteredTextBlock}"/>
                            <DataGridTextColumn Header="Qty Used"      Binding="{Binding Quantity}"       Width="90"
                                                ElementStyle="{StaticResource CenteredTextBlock}"/>
                            <DataGridTextColumn Header="Service"       Binding="{Binding ServiceCol}"     Width="140"
                                                ElementStyle="{StaticResource CenteredTextBlock}"/>
                            <DataGridTextColumn Header="Household"     Binding="{Binding HouseholdID}"    Width="120"
                                                ElementStyle="{StaticResource CenteredTextBlock}"/>
                            <DataGridTextColumn Header="Technician(s)" Binding="{Binding TechnicianCol}" Width="180"
                                                ElementStyle="{StaticResource CenteredTextBlock}"/>
                            <DataGridTextColumn Header="Used By"       Binding="{Binding UsedByCol}"      Width="160"
                                                ElementStyle="{StaticResource CenteredTextBlock}"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <!-- Restock history table -->
                    <TextBlock Text="Restock History" Style="{StaticResource FormLabel}" Margin="0,18,0,6"/>
                    <DataGrid x:Name="RestockGrid" IsReadOnly="True" MaxHeight="360">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="When"         Binding="{Binding RestockedAtLocal}" Width="180"
                                                ElementStyle="{StaticResource CenteredTextBlock}"/>
                            <DataGridTextColumn Header="Qty"          Binding="{Binding Quantity}"        Width="90"
                                                ElementStyle="{StaticResource CenteredTextBlock}"/>
                            <DataGridTextColumn Header="Restocked By" Binding="{Binding RestockedByCol}"  Width="180"
                                                ElementStyle="{StaticResource CenteredTextBlock}"/>
                            <DataGridTextColumn Header="Note"         Binding="{Binding Note}"            Width="*"
                                                ElementStyle="{StaticResource CenteredTextBlock}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
            </ScrollViewer>

            <!-- Footer: Close only (styled like AddInventoryControl's CancelButton) -->
            <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,20,0,0">
                <Button Content="✖ Close" Style="{StaticResource CancelButton}" Click="Cancel_Click"/>
            </StackPanel>
        </Grid>
    </Border>
</Window>
