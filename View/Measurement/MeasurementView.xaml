<UserControl x:Class="HouseholdMS.View.Measurement.MeasurementView" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:HouseholdMS.View.Measurement"
             MinWidth="820" MinHeight="560"
             FontFamily="Segoe UI" FontSize="13"
             SnapsToDevicePixels="True" UseLayoutRounding="True"
             TextOptions.TextFormattingMode="Display"
             TextOptions.TextRenderingMode="ClearType"
             RenderOptions.ClearTypeHint="Enabled">

    <UserControl.Resources>
        <!-- Palette -->
        <SolidColorBrush x:Key="PageBg"           Color="#F3F4F6"/>
        <SolidColorBrush x:Key="AccentBrush"      Color="#3B82F6"/>
        <SolidColorBrush x:Key="AccentBrushHover" Color="#2563EB"/>
        <SolidColorBrush x:Key="HeaderFg"         Color="#111827"/>
        <SolidColorBrush x:Key="BodyFg"           Color="#374151"/>
        <SolidColorBrush x:Key="SubtleFg"         Color="#6B7280"/>
        <SolidColorBrush x:Key="PassBrush"        Color="#10B981"/>
        <SolidColorBrush x:Key="FailBrush"        Color="#EF4444"/>

        <!-- Cards -->
        <SolidColorBrush x:Key="CardBg"     Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="CardBorder" Color="#E5E7EB"/>

        <Style x:Key="Card" TargetType="Border">
            <Setter Property="Padding" Value="14"/>
            <Setter Property="CornerRadius" Value="12"/>
            <Setter Property="Background" Value="{StaticResource CardBg}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CardBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>

        <!-- Headings -->
        <Style x:Key="SectionTitle" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="{StaticResource HeaderFg}"/>
            <Setter Property="Margin" Value="0,0,0,6"/>
        </Style>

        <!-- Primary Button -->
        <Style TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Padding" Value="10,6"/>
            <Setter Property="MinWidth" Value="80"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="bd" Background="{TemplateBinding Background}" CornerRadius="8">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                              RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="{StaticResource AccentBrushHover}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="bd" Property="Opacity" Value="0.5"/>
                                <Setter Property="Cursor" Value="Arrow"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ToggleButton -->
        <Style TargetType="ToggleButton">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#64748B"/>
            <Setter Property="Padding" Value="10,6"/>
            <Setter Property="MinWidth" Value="110"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="bd" Background="{TemplateBinding Background}" CornerRadius="8">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="{StaticResource AccentBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Opacity" Value="0.95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="bd" Property="Opacity" Value="0.5"/>
                                <Setter Property="Cursor" Value="Arrow"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Inputs -->
        <Style TargetType="ComboBox">
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="Margin" Value="0,0,8,0"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource BodyFg}"/>
        </Style>

        <Style TargetType="GroupBox">
            <Setter Property="Padding" Value="6"/>
            <Setter Property="Margin" Value="0,8,0,0"/>
        </Style>
        <Style TargetType="Expander">
            <Setter Property="Margin" Value="0,8,0,0"/>
        </Style>
    </UserControl.Resources>

    <Border Background="{StaticResource PageBg}" Padding="20">
        <ScrollViewer x:Name="PageScroll"
                      VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Disabled"
                      SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <!-- Header -->
                    <RowDefinition Height="Auto"/>
                    <!-- Connection -->
                    <RowDefinition Height="Auto"/>
                    <!-- Setup: Function / Math / Acquisition -->
                    <RowDefinition Height="Auto"/>
                    <!-- Advanced -->
                    <RowDefinition Height="*"/>
                    <!-- Readout + Graph -->
                    <RowDefinition Height="Auto"/>
                    <!-- Limits -->
                </Grid.RowDefinitions>

                <!-- Header -->
                <DockPanel Grid.Row="0" Margin="0,0,0,14">
                    <StackPanel DockPanel.Dock="Left">
                        <TextBlock Text="Measurement Console" FontSize="22" FontWeight="Bold"
                                   Foreground="{StaticResource HeaderFg}"/>
                        <TextBlock x:Name="DeviceNameText" Text="—" Foreground="{StaticResource SubtleFg}" TextWrapping="Wrap"/>
                    </StackPanel>

                    <!-- Right: status + SPS -->
                    <StackPanel DockPanel.Dock="Left" Orientation="Vertical" VerticalAlignment="Center" Width="520">
                        <Border Style="{StaticResource Card}" Padding="10">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="7*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                                    <TextBlock Text="Effective SPS:"/>
                                    <TextBlock x:Name="SpsText" FontWeight="SemiBold" Margin="6,0,0,0"/>
                                </StackPanel>

                                <StackPanel Grid.Column="1">
                                    <TextBlock Text="Status" FontWeight="Bold" Margin="0,6,0,4"/>
                                    <TextBlock x:Name="StatusBlock" TextWrapping="Wrap"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </StackPanel>
                </DockPanel>

                <!-- Connection Bar -->
                <Border Grid.Row="1" Style="{StaticResource Card}" Margin="0,0,0,14">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Orientation="Horizontal" Margin="0,0,8,0">
                            <TextBlock Text="COM" Margin="0,0,6,0"/>
                            <ComboBox x:Name="PortComboBox" Width="160"/>
                            <Button Content="⟲" Width="36" Margin="6,0,0,0"
                                    Click="RefreshPorts_Click" ToolTip="Refresh COM list"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Grid.Column="1" Margin="8,0">
                            <TextBlock Text="Baud" Margin="0,0,6,0"/>
                            <ComboBox x:Name="BaudComboBox" Width="130"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Grid.Column="2" Margin="8,0">
                            <TextBlock Text="Parity" Margin="0,0,6,0"/>
                            <ComboBox x:Name="ParityComboBox" Width="110"/>
                            <TextBlock Text="Bits" Margin="12,0,6,0"/>
                            <ComboBox x:Name="DataBitsComboBox" Width="90"/>
                        </StackPanel>

                        <Button Grid.Column="3" Content="Connect" Width="110" Margin="8,0,0,0" Click="Connect_Click"/>
                        <Button Grid.Column="4" Content="Disconnect" Width="120" Margin="8,0,0,0" Click="Disconnect_Click"/>
                        <Button Grid.Column="5" Content="IDN?" Width="80" Margin="8,0,0,0" Click="ReadIDN_Click"/>
                    </Grid>
                </Border>

                <!-- Function + Math + Acquisition -->
                <Border Grid.Row="2" Style="{StaticResource Card}" Margin="0,0,0,14">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <!-- Function -->
                            <ColumnDefinition Width="1.8*"/>
                            <!-- Math -->
                            <ColumnDefinition Width="1.2*"/>
                            <!-- Acquisition -->
                        </Grid.ColumnDefinitions>

                        <!-- Function selector -->
                        <StackPanel Grid.Column="0">
                            <TextBlock Text="Function" Style="{StaticResource SectionTitle}"/>
                            <WrapPanel>
                                <ComboBox x:Name="FunctionCombo" Width="210" Margin="0,0,10,0">
                                    <ComboBoxItem Content="Voltage DC"        Tag="VOLT:DC"/>
                                    <ComboBoxItem Content="Voltage AC"        Tag="VOLT:AC"/>
                                    <ComboBoxItem Content="Current DC"        Tag="CURR:DC"/>
                                    <ComboBoxItem Content="Current AC"        Tag="CURR:AC"/>
                                    <ComboBoxItem Content="Resistance (Ω)"    Tag="RES"/>
                                    <ComboBoxItem Content="4-Wire Resistance (Ω)" Tag="FRES"/>
                                    <ComboBoxItem Content="Temperature (RTD)" Tag="TEMP"/>
                                    <ComboBoxItem Content="Frequency (Hz)"    Tag="FREQ"/>
                                    <ComboBoxItem Content="Period (s)"        Tag="PER"/>
                                    <ComboBoxItem Content="Capacitance (F)"   Tag="CAP"/>
                                    <ComboBoxItem Content="Continuity"        Tag="CONT"/>
                                    <ComboBoxItem Content="Diode"             Tag="DIOD"/>
                                </ComboBox>
                                <Button Content="Apply" Width="90" Click="ApplyFunction_Click"/>
                            </WrapPanel>

                            <WrapPanel Margin="0,6,0,0">
                                <CheckBox x:Name="AutoRangeCheck" Content="Auto Range"
                                          Checked="AutoRangeCheck_Checked" Unchecked="AutoRangeCheck_Unchecked"/>
                                <TextBlock Text="Units:" Margin="16,0,6,0"/>
                                <TextBlock x:Name="UnitLabel" FontWeight="SemiBold" />
                            </WrapPanel>

                            <!-- Show active range here -->
                            <WrapPanel Margin="0,6,0,0">
                                <TextBlock Text="Current Range:"/>
                                <TextBlock x:Name="RangeDisplayText" FontWeight="SemiBold" Margin="6,0,0,0"/>
                            </WrapPanel>
                        </StackPanel>

                        <!-- Math -->
                        <StackPanel Grid.Column="1" Margin="12,0,0,0">
                            <TextBlock Text="Math" Style="{StaticResource SectionTitle}"/>

                            <!-- Single toggle + Refresh Stats -->
                            <WrapPanel>
                                <Button x:Name="MathToggleBtn"
                                        Width="200"
                                        Content="Enable Math Calculations"
                                        Click="MathToggleBtn_Click" />
                                <Button Content="Refresh Stats" Width="120" Margin="8,0,0,0"
                                        Click="RefreshStats_Click" ToolTip="Query AVG?/MIN?/MAX? now"/>
                            </WrapPanel>

                            <Expander Header="Relative (NULL)" IsExpanded="False" Margin="0,8,0,0">
                                <WrapPanel Margin="8,6,0,6">
                                    <Button Content="Enable REL" Width="110" Click="RelEnable_Click"/>
                                    <Button Content="Zero (NULL:OFFS)" Width="140" Margin="8,0,0,0" Click="RelZero_Click"/>
                                    <Button Content="Disable REL" Width="120" Margin="8,0,0,0" Click="RelDisable_Click"/>
                                </WrapPanel>
                            </Expander>

                            <Expander Header="Level in dB / dBm" IsExpanded="False">
                                <WrapPanel Margin="8,6,0,6">
                                    <TextBlock Text="Ref (Ω):" Margin="0,6,6,0"/>
                                    <ComboBox x:Name="DbRefCombo" Width="120">
                                        <ComboBoxItem Content="50"/>
                                        <ComboBoxItem Content="75"/>
                                        <ComboBoxItem Content="600"/>
                                    </ComboBox>
                                    <Button Content="Use dB" Width="90" Margin="8,0,0,0" Click="MathDb_Click"/>
                                    <Button Content="Use dBm" Width="90" Margin="8,0,0,0" Click="MathDbm_Click"/>
                                    <Button Content="Math OFF" Width="100" Margin="8,0,0,0" Click="MathOff_Click"/>
                                </WrapPanel>
                            </Expander>
                            <!-- (Statistics expander removed; stats moved to Readout + Graph) -->
                        </StackPanel>

                        <!-- Acquisition -->
                        <StackPanel Grid.Column="2" Margin="12,0,0,0">
                            <TextBlock Text="Acquisition" Style="{StaticResource SectionTitle}"/>

                            <WrapPanel>
                                <Button Content="Read Once" Width="110" Click="ReadButton_Click"/>
                                <ToggleButton x:Name="ContToggle" Content="Continuous" Width="120" Margin="8,0,0,0"
                                              Checked="ContToggle_Checked" Unchecked="ContToggle_Unchecked"/>
                            </WrapPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,8,0,0" VerticalAlignment="Center">
                                <TextBlock Text="Rate" Margin="0,0,6,0"/>
                                <ComboBox x:Name="RateCombo" Width="140" SelectionChanged="RateCombo_Changed">
                                    <ComboBoxItem Content="Fast"   Tag="F"/>
                                    <ComboBoxItem Content="Medium" Tag="M" IsSelected="True"/>
                                    <ComboBoxItem Content="Low"    Tag="L"/>
                                </ComboBox>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,8,0,0" VerticalAlignment="Center">
                                <TextBlock Text="Interval" Margin="0,0,8,0"/>
                                <Slider x:Name="IntervalSlider" Minimum="50" Maximum="2000" Value="500"
                                        Width="180" Margin="0,0,8,0"/>
                                <TextBlock x:Name="IntervalLabel" Text="500 ms"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </Border>

                <!-- Advanced Controls -->
                <Border Grid.Row="3" Style="{StaticResource Card}" Margin="0,0,0,14">
                    <StackPanel>
                        <TextBlock Text="Advanced Controls" Style="{StaticResource SectionTitle}" FontSize="16"/>

                        <WrapPanel Margin="0,4,0,8">
                            <Button Content="Remote (SYST:REM)" Width="150" Click="Remote_Click"/>
                            <Button Content="Local (SYST:LOC)"  Width="140" Margin="8,0,0,0" Click="Local_Click"/>
                            <Button Content="RATE?"             Width="90"  Margin="8,0,0,0" Click="QueryRate_Click"/>
                            <Button Content="FUNC?"             Width="80"  Margin="8,0,0,0" Click="QueryFunc_Click"/>
                            <Button Content="RANGE?"            Width="90"  Margin="8,0,0,0" Click="QueryRange_Click"/>
                            <TextBlock x:Name="RateReadbackText" Margin="8,6,0,0" Foreground="{StaticResource SubtleFg}"/>
                        </WrapPanel>

                        <!-- Temperature -->
                        <Expander Header="Temperature (RTD / THER)" IsExpanded="False">
                            <StackPanel Margin="8">
                                <WrapPanel>
                                    <TextBlock Text="Unit:" Margin="0,6,8,0"/>
                                    <RadioButton x:Name="TempUnitC" Content="°C" IsChecked="True" GroupName="TempUnit"/>
                                    <RadioButton x:Name="TempUnitF" Content="°F" Margin="8,0,0,0" GroupName="TempUnit"/>
                                    <RadioButton x:Name="TempUnitK" Content="K"  Margin="8,0,0,0" GroupName="TempUnit"/>
                                    <Button Content="Apply Unit" Width="110" Margin="12,0,0,0" Click="ApplyTempUnit_Click"/>
                                    <Button Content="UNIT?" Width="80" Margin="8,0,0,0" Click="QueryTempUnit_Click"/>
                                </WrapPanel>

                                <WrapPanel Margin="8,8,0,0">
                                    <Button Content="CONF:TEMP:THER KITS90" Width="210" Click="ApplyTherKits90_Click"
                                            ToolTip="Configures thermometer standard"/>
                                    <Button Content="TYPE?" Width="80" Margin="8,0,0,0" Click="QueryTempType_Click"/>
                                    <Button Content="MEAS:TEMP?" Width="120" Margin="8,0,0,0" Click="ReadTempOnce_Click"/>
                                </WrapPanel>
                            </StackPanel>
                        </Expander>

                        <!-- Voltage -->
                        <Expander Header="Voltage (V / mV)" IsExpanded="False">
                            <StackPanel Margin="8">
                                <WrapPanel>
                                    <TextBlock Text="Mode:" Margin="0,6,8,0"/>
                                    <ComboBox x:Name="VoltModeCombo" Width="120">
                                        <ComboBoxItem Content="DC" IsSelected="True"/>
                                        <ComboBoxItem Content="AC"/>
                                    </ComboBox>
                                    <TextBlock Text="V Range:" Margin="16,6,8,0"/>
                                    <ComboBox x:Name="VoltRangeV" Width="100">
                                        <ComboBoxItem Content="5"/>
                                        <ComboBoxItem Content="50"/>
                                        <ComboBoxItem Content="500"/>
                                        <ComboBoxItem Content="1000"/>
                                    </ComboBox>
                                    <TextBlock Text="mV Range:" Margin="16,6,8,0"/>
                                    <ComboBox x:Name="VoltRange_mV" Width="120">
                                        <ComboBoxItem Content="50E-3"/>
                                        <ComboBoxItem Content="500E-3"/>
                                    </ComboBox>
                                    <Button Content="Apply V" Width="90" Margin="12,0,0,0" Click="ApplyVoltRangeV_Click"/>
                                    <Button Content="Apply mV" Width="100" Margin="8,0,0,0" Click="ApplyVoltRange_mV_Click"/>
                                </WrapPanel>
                            </StackPanel>
                        </Expander>

                        <!-- Current -->
                        <Expander Header="Current (A / mA / µA)" IsExpanded="False">
                            <StackPanel Margin="8">
                                <WrapPanel>
                                    <TextBlock Text="Mode:" Margin="0,6,8,0"/>
                                    <ComboBox x:Name="CurrModeCombo" Width="120">
                                        <ComboBoxItem Content="DC" IsSelected="True"/>
                                        <ComboBoxItem Content="AC"/>
                                    </ComboBox>
                                    <TextBlock Text="A Range:" Margin="16,6,8,0"/>
                                    <ComboBox x:Name="CurrRangeA" Width="110">
                                        <ComboBoxItem Content="5"/>
                                        <ComboBoxItem Content="10"/>
                                    </ComboBox>
                                    <TextBlock Text="mA/µA Range:" Margin="16,6,8,0"/>
                                    <ComboBox x:Name="CurrRange_mA" Width="170"
                                              ToolTip="500E-6 (500µA), 5E-3 (5mA), 50E-3 (50mA), 500E-3 (500mA)">
                                        <ComboBoxItem Content="500E-6"/>
                                        <ComboBoxItem Content="5E-3"/>
                                        <ComboBoxItem Content="50E-3"/>
                                        <ComboBoxItem Content="500E-3"/>
                                    </ComboBox>
                                    <Button Content="Apply A" Width="90" Margin="12,0,0,0" Click="ApplyCurrRangeA_Click"/>
                                    <Button Content="Apply mA" Width="100" Margin="8,0,0,0" Click="ApplyCurrRange_mA_Click"/>
                                </WrapPanel>
                            </StackPanel>
                        </Expander>

                        <!-- Capacitance -->
                        <Expander Header="Capacitance (F)" IsExpanded="False">
                            <StackPanel Margin="8">
                                <WrapPanel>
                                    <TextBlock Text="Range:" Margin="0,6,8,0"/>
                                    <ComboBox x:Name="CapRangeCombo" Width="140">
                                        <ComboBoxItem Content="50E-9"/>
                                        <ComboBoxItem Content="500E-9"/>
                                        <ComboBoxItem Content="5E-6"/>
                                    </ComboBox>
                                    <Button Content="Apply CAP" Width="110" Margin="8,0,0,0" Click="ApplyCap_Click"/>
                                </WrapPanel>
                            </StackPanel>
                        </Expander>

                        <!-- Removed Resistance and Period expanders (duplicates) -->
                        <Expander Header="Continuity and Diode" IsExpanded="False">
                            <StackPanel Margin="8">
                                <WrapPanel>
                                    <TextBlock Text="Continuity Threshold (Ω):" Margin="0,6,8,0"/>
                                    <TextBox x:Name="ContThresholdBox" Width="120" Text="50"/>
                                    <Button Content="Apply Threshold" Width="130" Margin="8,0,0,0" Click="ApplyContinuityThreshold_Click"/>
                                    <CheckBox x:Name="BeepToggle" Content="Beeper" Margin="16,0,0,0"
                                              Checked="BeepToggle_Checked" Unchecked="BeepToggle_Unchecked"/>
                                </WrapPanel>
                            </StackPanel>
                        </Expander>
                    </StackPanel>
                </Border>

                <!-- Readout + Graph -->
                <Border Grid.Row="4" Style="{StaticResource Card}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <!-- big readout -->
                            <RowDefinition Height="Auto"/>
                            <!-- stats moved here -->
                            <RowDefinition Height="Auto"/>
                            <!-- quick trio -->
                            <RowDefinition Height="*"/>
                            <!-- plot -->
                            <RowDefinition Height="Auto"/>
                            <!-- zoom -->
                        </Grid.RowDefinitions>

                        <!-- Big value -->
                        <StackPanel Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Center" Margin="0,0,0,8">
                            <TextBlock Text="Measured Value:" FontWeight="Bold" Margin="0,0,8,0"/>
                            <TextBlock x:Name="MeasurementText" FontSize="26" FontWeight="SemiBold"
                                       Foreground="{StaticResource HeaderFg}"/>
                            <TextBlock Text=" " Width="8"/>
                            <TextBlock x:Name="UnitSuffixText" FontSize="20" VerticalAlignment="Bottom"/>
                            <Border Background="#EEF2FF" CornerRadius="8" Padding="6,2" Margin="12,0,0,0">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="PASS/FAIL:" FontWeight="Bold"/>
                                    <TextBlock x:Name="PassFailText" Margin="6,0,0,0"/>
                                </StackPanel>
                            </Border>
                        </StackPanel>

                        <!-- Stats (Averaging) now here -->
                        <WrapPanel Grid.Row="1" Margin="0,0,0,8">
                            <TextBlock Text="Avg:" Margin="0,6,6,0"/>
                            <TextBlock x:Name="AvgValText" Margin="0,6,12,0"/>
                            <TextBlock Text="Min:" Margin="0,6,6,0"/>
                            <TextBlock x:Name="MinValText" Margin="0,6,12,0"/>
                            <TextBlock Text="Max:" Margin="0,6,6,0"/>
                            <TextBlock x:Name="MaxValText" Margin="0,6,12,0"/>
                        </WrapPanel>

                        <!-- Quick trio -->
                        <Grid Grid.Row="2" Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0">
                                <TextBlock Text="Voltage" FontWeight="Bold"/>
                                <TextBlock x:Name="VoltageText" FontSize="16"/>
                            </StackPanel>
                            <StackPanel Grid.Column="1">
                                <TextBlock Text="Current" FontWeight="Bold"/>
                                <TextBlock x:Name="CurrentText" FontSize="16"/>
                            </StackPanel>
                            <StackPanel Grid.Column="2">
                                <TextBlock Text="Resistance" FontWeight="Bold"/>
                                <TextBlock x:Name="ResistanceText" FontSize="16"/>
                            </StackPanel>
                        </Grid>

                        <!-- Plot -->
                        <StackPanel Grid.Row="3">
                            <ProgressBar x:Name="BusyBar" Height="6" IsIndeterminate="True"
                                         Visibility="Collapsed" Margin="0,0,0,10"/>
                            <local:LivePlotControl x:Name="PlotControl" Height="260" HorizontalAlignment="Stretch"/>
                        </StackPanel>

                        <!-- Zoom -->
                        <DockPanel Grid.Row="4" LastChildFill="False" Margin="0,8,0,0">
                            <WrapPanel DockPanel.Dock="Left">
                                <Button Content="Zoom In" Width="90" Click="PlotZoomIn_Click"/>
                                <Button Content="Zoom Out" Width="90" Margin="8,0,0,0" Click="PlotZoomOut_Click"/>
                                <Button Content="Reset View" Width="110" Margin="8,0,0,0" Click="PlotResetView_Click"/>
                            </WrapPanel>
                        </DockPanel>
                    </Grid>
                </Border>

                <!-- Limits -->
                <Border Grid.Row="5" Style="{StaticResource Card}" Margin="0,14,0,0">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBlock Text="Lower Limit:" Margin="0,0,8,0"/>
                        <TextBox x:Name="LowerLimitBox" Width="120" Text="" Margin="0,0,12,0"/>
                        <TextBlock Text="Upper Limit:" Margin="0,0,8,0"/>
                        <TextBox x:Name="UpperLimitBox" Width="120" Text=""/>
                        <Button Content="Apply Limits" Width="120" Margin="12,0,0,0" Click="ApplyLimits_Click"/>
                    </StackPanel>
                </Border>
            </Grid>
        </ScrollViewer>
    </Border>
</UserControl>
